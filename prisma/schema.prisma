generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  contact   Contact?
  tickets   Ticket[]
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  phone      String
  email      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Movie {
  id          Int      @id @default(autoincrement())
  screenings  Screening[]
  title       String
  runTimeMins Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Screening {
  id          Int      @id @default(autoincrement())
  tickets     Ticket[]
  movie       Movie    @relation(fields: [movieId], references: [id])
  movieId     Int
  screen      Screen  @relation(fields: [screenId], references: [id])
  screenId    Int
  startsAt    DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Screen {
  id          Int        @id @default(autoincrement())
  screenings  Screening[]
  number      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Ticket {
  id          Int        @id @default(autoincrement())
  screening   Screening  @relation(fields: [screeningId], references: [id])
  screeningId Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  customerId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
